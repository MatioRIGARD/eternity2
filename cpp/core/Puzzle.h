#ifndef PUZZLE_H
#define PUZZLE_H

#include <stdint.h>


enum PieceOrientation: uint8_t {
    PIECE_ORIENTATION_NONE,
    PIECE_ORIENTATION_UP,
    PIECE_ORIENTATION_RIGHT,
    PIECE_ORIENTATION_DOWN,
    PIECE_ORIENTATION_LEFT
};

enum PieceColor: uint8_t {
    PIECE_COLOR_NONE,
    PIECE_COLOR_BORDER,
    PIECE_COLOR_ORANGE_LIGHT_BLUE_CROSS,
    PIECE_COLOR_PINK_YELLOW_CROSS,
    PIECE_COLOR_VIOLET_GREEN_CIRCLE,
    PIECE_COLOR_LIGHT_BLUE_PINK_CROSS,
    PIECE_COLOR_GREEN_BLUE_CIRCLE,
    PIECE_COLOR_VIOLET_YELLOW_CIRCLE,
    PIECE_COLOR_LIGHT_BLUE_PINK_SQUARE,
    PIECE_COLOR_BLUE_ORANGE_CROSS,
    PIECE_COLOR_BLUE_YELLOW_FLOWER,
    PIECE_COLOR_VIOLET_LIGHT_BLUE_CROSS,
    PIECE_COLOR_GREEN_ORANGE_CROSS,
    PIECE_COLOR_YELLOW_BLUE_SQUARE,
    PIECE_COLOR_RED_ORANGE_HOLLOW_SQUARE,
    PIECE_COLOR_GREEN_PINK_CROSS,
    PIECE_COLOR_YELLOW_GREEN_HOLLOW_SQUARE,
    PIECE_COLOR_BLUE_LIGHT_BLUE_HOLLOW_SQUARE,
    PIECE_COLOR_PINK_LIGHT_BLUE_HOLLOW_FLOWER,
    PIECE_COLOR_YELLOW_LIGHT_BLUE_STAR,
    PIECE_COLOR_VIOLET_YELLOW_STAR,
    PIECE_COLOR_ORANGE_VIOLET_STAR,
    PIECE_COLOR_PINK_YELLOW_SQUARE,
    PIECE_COLOR_BLUE_PINK_CIRCLE
};

struct PuzzlePiece {
    uint8_t m_number;
    uint8_t m_positionX;
    uint8_t m_positionY;
    PieceOrientation m_orientation;
    PieceColor m_colors[4];
};


#endif  // PUZZLE_H
